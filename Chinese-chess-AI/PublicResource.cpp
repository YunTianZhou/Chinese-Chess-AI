#include "PublicResource.h"

const std::unordered_map<std::string, const wchar_t> PublicResource::piece_name_translater = {
    {"rj", L'俥'},
    {"bj", L'車'},

    {"rm", L'傌'},
    {"bm", L'馬'},

    {"rx", L'相'},
    {"bx", L'象'},

    {"rs", L'仕'},
    {"bs", L'士'},

    {"rl", L'帥'},
    {"bl", L'将'},

    {"rp", L'炮'},
    {"bp", L'炮'},

    {"rb", L'兵'},
    {"bb", L'卒'},
};

const std::unordered_map<char, int> PublicResource::piece_power = {
    {'j', 180},
    {'m', 60},
    {'x', 40},
    {'s', 40},
    {'l', 10000},
    {'p', 100},
    {'b', 20}
};

const std::unordered_map<char, int> PublicResource::piece_activity =
{
    {'j', 1},
    {'m', 5}
};

cma::ChessMovesAnalyze<std::string>* PublicResource::Cma = nullptr;

const std::unordered_map<char, std::vector<
    std::vector<int>>> PublicResource::piece_position_score =
{
    {'j', {
            {  0,  6,  4,  5,  0,  5,  4,  6,  0 },
            {  6,  5,  5,  8,  0,  8,  5,  5,  6 },
            {  4,  4,  3,  7,  2,  7,  3,  3,  4 },
            {  2,  4,  4,  6,  4,  6,  4,  4,  2 },
            {  9,  12,  10,  12,  8,  12,  10,  12,  9 },
            {  8,  10,  9,  10,  8,  10,  9,  10,  8 },
            {  8,  10,  15,  14,  10,  14,  15,  10,  8 },
            {  5,  8,  5,  9,  10,  9,  5,  8,  5 },
            {  5,  10,  8,  15,  10,  15,  8,  10,  5 },
            {  2,  8,  0,  8,  0,  8,  0,  8,  2 }
        }},
    { 'm', {
            {  -10,  0,  0,  0,  -10,  0,  0,  0,  -10 },
            {  -5,  0,  0,  5,  -15,  5,  0,  0,  -5 },
            {  4,  0,  5,  6,  5,  6,  5,  0,  4 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  7,  9,  7,  7,  7,  9,  7,  0 },
            {  8,  8,  10,  9,  8,  9,  10,  8,  8 },
            {  8,  12,  10,  14,  8,  14,  10,  12,  8 },
            {  10,  8,  14,  15,  10,  15,  14,  8,  10 },
            {  3,  10,  15,  10,  0,  10,  15,  10,  3 },
            {  6,  5,  10,  5,  0,  5,  10,  5,  6 },
        }},
    { 'x', {
            {  0,  0,  3,  0,  0,  0,  3,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  1,  0,  0,  0,  8,  0,  0,  0,  1 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  5,  0,  0,  0,  5,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        }},
    { 's', {
            {  0,  0,  0,  2,  0,  2,  0,  0,  0 },
            {  0,  0,  0,  0,  5,  0,  0,  0,  0 },
            {  0,  0,  0,  3,  0,  3,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 }
        }},
    { 'l', {
            {  0,  0,  0,  -1,  0,  -1,  0,  0,  0 },
            {  0,  0,  0,  -5,  -5,  -5,  0,  0,  0 },
            {  0,  0,  0,  -10,  -10,  -10,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        }},
    { 'p', {
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  3,  0,  0,  0,  0 },
            {  2,  0,  3,  2,  4,  2,  3,  0,  2 },
            {  0,  0,  0,  0,  5,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  7,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  7,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  7,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  4,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  10,  10,  5,  0,  0,  0,  5,  10,  10 },
        }},
    { 'b', {
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  2,  0,  2,  0,  -2,  0,  2,  0,  2 },
            {  20,  22,  23,  24,  24,  24,  23,  22,  20 },
            {  21,  23,  24,  25,  25,  25,  24,  23,  21 },
            {  21,  22,  25,  27,  27,  27,  25,  22,  21 },
            {  21,  23,  25,  29,  32,  29,  25,  20,  21 },
            {  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10 },
        }}
};

const std::vector<std::pair<coordinate, coordinate>> PublicResource::first_move =
{
    { { 1,0 }, { 2,2 } },
    { { 7,0 }, { 6,2 } },
    { { 1,0 }, { 0,2 } },
    { { 7,0 }, { 8,2 } },
    { { 2,0 }, { 4,2 } },
    { { 6,0 }, { 4,2 } },
    { { 3,0 }, { 4,1 } },
    { { 5,0 }, { 4,1 } },
    { { 1,2 }, { 0,2 } },
    { { 7,2 }, { 8,2 } },
    { { 1,2 }, { 2,2 } },
    { { 7,2 }, { 6,2 } },
    { { 1,2 }, { 3,2 } },
    { { 1,2 }, { 4,2 } },
    { { 7,2 }, { 4,2 } },
    { { 7,2 }, { 5,2 } }, 
    { { 1,2 }, { 5,2 } },
    { { 7,2 }, { 3,2 } }, 
    { { 1,2 }, { 6,2 } },
    { { 7,2 }, { 2,2 } }, 
    { { 1,2 }, { 1,3 } },
    { { 7,2 }, { 7,3 } },
    { { 1,2 }, { 1,4 } },
    { { 7,2 }, { 7,4 } },
    { { 0,3 }, { 0,4 } },
    { { 2,3 }, { 2,4 } },
    { { 6,3 }, { 6,4 } },
    { { 8,3 }, { 8,4 } },
};

const std::vector<std::string> PublicResource::piece_type =
{
    "rb", "rj", "rm", "rp", "rx", "rs", "rl",
    "bb", "bj", "bm", "bp", "bx", "bs", "bl",
};

const std::unordered_map<std::wstring, COLORREF> PublicResource::winway_to_color =
{
    {_T("玩家求和"), DEEP_GREEN},
    {_T("僵持不下"), DEEP_GREEN},
    {_T("无子成杀"), DEEP_GREEN},
    {_T("玩家绝杀"), RED},
    {_T("电脑绝杀"), BLACK},
    {_T("玩家困毙"), GRAY},
    {_T("电脑困毙"), GRAY},
    {_T("对手长将"), PURPLE}
};

const std::unordered_map<int, std::wstring> PublicResource::code_to_ticket =
{
    {0, _T("精彩对局")},
    {1, _T("惊天妙手")},
    {2, _T("绝地反击")},
    {3, _T("巧妙残局")},
};

const std::vector<COLORREF> PublicResource::ticket_colors =
{
    RGB(255, 165, 0),
    RGB(128, 0, 128),
    RGB(0, 128, 0),
    RGB(139, 69, 19),
};

CHESS_BOARD PublicResource::current_chessBoard{};
CHESS_BOARD PublicResource::current_original_chessBoard{};
size_t PublicResource::current_amount = -1;
bool PublicResource::current_go_first = false;
bool PublicResource::current_automatically_add = false;
int PublicResource::current_recent_id = 0;
int PublicResource::current_my_id = 0;
int PublicResource::current_load_id = 0;

const std::unordered_map<std::wstring, int> PublicResource::explaintion_to_code =
{
    { _T("玩家求和"), 0 },
    { _T("玩家绝杀"), 1 },
    { _T("电脑绝杀"), 2 },
    { _T("玩家困毙"), 3 },
    { _T("电脑困毙"), 4 },
    { _T("僵持不下"), 5 },
    { _T("无子成杀"), 6 },
    { _T("对手长将"), 7 },
};

const std::unordered_map<int, std::wstring> PublicResource::code_to_explaintion =
{
    { 0, _T("玩家求和") },
    { 1, _T("玩家绝杀") },
    { 2, _T("电脑绝杀") },
    { 3, _T("玩家困毙") },
    { 4, _T("电脑困毙") },
    { 5, _T("僵持不下") },
    { 6, _T("无子成杀") },
    { 7, _T("对手长将") },
};

const std::vector<std::vector<std::wstring>> PublicResource::manage_interface_functions =
{
    {_T("查看对局"), _T("加入我的对局"), _T("分享对局")},
    {_T("查看对局"), _T("更改标签"), _T("分享对局"), _T("删除对局")},
    {_T("查看对局"), _T("查看标签"), _T("转发对局"),  _T("删除对局")}
};

const std::unordered_map<size_t, std::wstring> PublicResource::manage_interface_func_to_label =
{
    {0, _T("查看")},
    {1, _T("加入")},
    {2, _T("分享")},
    {10, _T("查看")},
    {11, _T("更改")},
    {12, _T("分享")},
    {13, _T("删除")},
    {20, _T("查看")},
    {21, _T("查看")},
    {22, _T("分享")},
    {23, _T("删除")},
};

const std::vector<std::vector<COLORREF>> PublicResource::manage_interface_colors = {
    { RGB(255, 255, 0), RGB(255, 165, 0), RGB(0, 255, 0) },
    { RGB(255, 255, 0), RGB(255, 0, 255), RGB(0, 255, 0), RGB(128, 128, 128) },
    { RGB(255, 255, 0), RGB(255, 0, 255), RGB(0, 255, 0), RGB(128, 128, 128) }
};

const std::vector<std::wstring> PublicResource::manage_interface_ticket_types =
{
    _T("精彩对局"), _T("惊天妙手"), _T("绝地反击"), _T("巧妙残局")
};

const std::vector <std::wstring> PublicResource::settings_interface_slider_info =
{
    _T("五千"), _T("一万"), _T("十万"), _T("百万"), _T("千万"), _T("一亿"), _T("五亿")
};

const std::vector <size_t> PublicResource::settings_interface_slider_values =
{
    5000, 10000, 100000, 1000000, 10000000, 100000000, 500000000
};

const std::unordered_map<char, std::vector<
    std::vector<bool>>> PublicResource::settings_interface_piece_legal_position =
{
    { 'x', {
            {  0,  0,  1,  0,  0,  0,  1,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  1,  0,  0,  0,  1,  0,  0,  0,  1 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  1,  0,  0,  0,  1,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
            {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        }},
    { 's', {
        {  0,  0,  0,  1,  0,  1,  0,  0,  0 },
        {  0,  0,  0,  0,  1,  0,  0,  0,  0 },
        {  0,  0,  0,  1,  0,  1,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 }
    }},
    { 'l', {
        {  0,  0,  0,  1,  1,  1,  0,  0,  0 },
        {  0,  0,  0,  1,  1,  1,  0,  0,  0 },
        {  0,  0,  0,  1,  1,  1,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
    }},
    { 'b', {
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  0,  0,  0,  0,  0,  0,  0,  0,  0 },
        {  1,  0,  1,  0,  1,  0,  1,  0,  1 },
        {  1,  0,  1,  0,  1,  0,  1,  0,  1 },
        {  1,  1,  1,  1,  1,  1,  1,  1,  1 },
        {  1,  1,  1,  1,  1,  1,  1,  1,  1 },
        {  1,  1,  1,  1,  1,  1,  1,  1,  1 },
        {  1,  1,  1,  1,  1,  1,  1,  1,  1 },
        {  1,  1,  1,  1,  1,  1,  1,  1,  1 },
    }}
};

std::vector<std::wstring> PublicResource::settings_interface_button_texts =
{
    _T("重置棋盘"), _T("清空棋盘"), _T("撤销更改 ")
};

std::vector<COLORREF> PublicResource::settings_interface_button_colors =
{
    RGB(144, 238, 144),
    RGB(173, 216, 230),
    RGB(255, 255, 153)
};